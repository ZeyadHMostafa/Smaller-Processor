	
tooltips = {
	'Emul_speed':'amount of time in ms per cycle',
	'Emul_AutoFlag':'set S flag on restart',
	'Emul_P':'pause and play emulation',
    'Emul_C':'single steps forward',
	'Emul_R':'reset emulation',
	'Emul_path':'path for binary to load into memory',
	'Emul_L':'link binary to output of assembler',
	'ASM_input_path':'input path for the assembler',
	'ASM_output_path':'output path for the assembler',
	'ASM_console_output':'log for assembler program',
	'ASM':'Run assembler program',
	'IO_S':'asynchronusly set S flag',
	'IO_1':'asynchronusly set FG1 flag',
	'IO_2':'asynchronusly set FG2 flag',
	'IO_3':'asynchronusly set FG3 flag',
	'IO_4':'asynchronusly set FG4 flag',
	'F_S':'S Flag',
	'F_IEN':'IEN Flag',
	'F_E':'E Flag',
	'F_B':'B Flag',
	'F_FG1':'FG1 Flag',
	'F_FG2':'FG2 Flag',
	'F_FG3':'FG3 Flag',
	'F_FG4':'FG4 Flag',
	'INPR_value':'register value',
	'INPR_decoded':'',
	'INPR_switch':'Still not functional',
	'INPR':'',
	'OUTR_value':'register value',
	'OUTR_decoded':'',
	'OUTR_switch':'Still not functional',
	'OUTR':'',
	'PC_value':'register value',
	'PC_decoded':'',
	'PC_switch':'Still not functional',
	'PC_jump':'jump to address',
	'PC':'',
	'IR_value':'register value',
	'IR_decoded':'',
	'IR_switch':'Still not functional',
	'IR':'',
	'AR_value':'register value',
	'AR_decoded':'',
	'AR_switch':'Still not functional',
	'AR_jump':'jump to address',
	'AR':'',
	'AC_value':'register value',
	'AC_decoded':'',
	'AC_switch':'Still not functional',
	'AC':'',
	'M_Value':'',
	'M_Decoded':'',
	'M_L3':'',
	'M_L2':'',
	'M_L1':'',
	'M_Block':'',
	'M_R1':'',
	'M_R2':'',
	'M_R3':'',
}